% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/naiveBayes.R
\name{plot.nb2}
\alias{plot.nb2}
\title{Plot Naive Bayes Models}
\usage{
\method{plot}{nb2}(x, xlim, ylim, features, sdevs = 2, gridsize, data,
  class.name = "class", gg = TRUE, ...)
}
\arguments{
\item{x}{[nb2]
A Naive Bayes Model}

\item{xlim, ylim}{[numeric(2)]}

\item{features}{[numeric(2) | character(2)]
If missing, the first two features are plotted.}

\item{sdevs}{[numeric(1)]
If missing(xlim) & missing(ylim): How many standard deviations from the mean
in x and y direction.}

\item{gridsize}{[numeric(1)]
Size of grid to be predicted and plotted.}

\item{data}{[list | data.frame]
List with elements "x" and "class" or data.frame (then see argument
class.name).}

\item{class.name}{[character]
If data is data.frame, then give the class' column name here.
Default: \code{"class"}.}

\item{gg}{[logical]}

\item{...}{Currently ignored.}
}
\description{
Plot Naive Bayes Models
}
\examples{
mod <- nb2(iris[, 1:4], iris[, 5])
plot(mod, features = 2:3, xlim = c(1.5, 4.5), ylim = c(0.5, 7.5),
     gridsize = 75, gg = FALSE)
points(iris[, 2:3], col = iris[, 5], pch = 4, lwd = 3)

require(ggplot2)
mod1 <- nb2(iris[, 1:4], iris[, 5])
preds <- predict(mod1, iris[, c(1, 3)])
iris2 <- cbind(iris, err = (preds != iris$Species))
plot(mod1, features = c(1, 3), xlim = c(4, 8), ylim = c(0, 8)) +
  geom_point(data = subset(iris2, iris2$err),
             aes(x = Sepal.Length, y = Petal.Length, shape = Species),
             size = 3.5, col = "white", show.legend = FALSE) +
  geom_point(aes(x = Sepal.Length, y = Petal.Length, shape = Species),
             data = iris2, size = 2) +
  guides(colour = FALSE, shape = FALSE)

discParam <- list(Sepal.L = c(5, 6, 7), Sepal.W = c(2.5, 3.5))
mod2 <- nb2(iris[, 1:4], iris[, 5], discretize = "fixed",
            discParams = discParam)
preds <- predict(mod2, iris[, c(1, 3)])
iris2 <- cbind(iris, err = (preds != iris$Species))
plot(mod2, features = c(1, 3), xlim = c(4, 8), ylim = c(0, 8)) +
  geom_point(aes(x = Sepal.Length, y = Petal.Length, shape = Species),
             data = subset(iris2, iris2$err), size = 3.5, col = "white",
             show.legend = FALSE) +
  geom_point(aes(x = Sepal.Length, y = Petal.Length, shape = Species),
  data = iris2, size = 2) +
  guides(colour = FALSE, shape = FALSE)

}

